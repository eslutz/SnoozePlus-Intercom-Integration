version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8706:8706'
    env_file:
      - .env.local
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      - postgres
    command: npm run dev

  postgres:
    image: postgres:17-bookworm
    environment:
      POSTGRES_DB: ${PGDATABASE:-snoozeplus_dev}
      POSTGRES_USER: ${PGUSER:-postgres}
      POSTGRES_PASSWORD: ${PGPASSWORD:-password}
    ports:
      - '5432:5432'
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${PGUSER:-postgres}']
      interval: 10s
      timeout: 5s
      retries: 5

  flyway:
    image: flyway/flyway:10-alpine
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./database/migrations:/flyway/migrations
      - ./database/flyway.toml:/flyway/conf/flyway.toml
    environment:
      FLYWAY_URL: jdbc:postgresql://postgres:5432/${PGDATABASE:-snoozeplus_dev}
      FLYWAY_USER: ${PGUSER:-postgres}
      FLYWAY_PASSWORD: ${PGPASSWORD:-password}
      FLYWAY_LOCATIONS: filesystem:/flyway/migrations
      FLYWAY_SCHEMAS: public
    command: migrate

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '5050:80'
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_dev_data:
  pgadmin_data:
